// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BlockchainMetadata {
    /// Is blockchain listed on all workspaces? Global or Local
    #[serde(rename = "scope")]
    pub scope: Scope,
    /// Is blockchain deprecated
    #[serde(rename = "deprecated")]
    pub deprecated: bool,
    /// Blockchainâ€™s media
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<Vec<models::BlockchainMedia>>,
    #[serde(rename = "explorer", skip_serializing_if = "Option::is_none")]
    pub explorer: Option<models::BlockchainExplorer>,
}

impl BlockchainMetadata {
    pub fn new(scope: Scope, deprecated: bool) -> BlockchainMetadata {
        BlockchainMetadata {
            scope,
            deprecated,
            media: None,
            explorer: None,
        }
    }
}
/// Is blockchain listed on all workspaces? Global or Local
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Scope {
    #[serde(rename = "GLOBAL")]
    Global,
    #[serde(rename = "LOCAL")]
    Local,
}

impl Default for Scope {
    fn default() -> Scope {
        Self::Global
    }
}
